# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

def delete_temp_keychain(name)
    delete_keychain(
      name: name
    ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
    create_keychain(
      name: name,
      password: password,
      unlock: false,
      timeout: 0
    )
end

def ensure_temp_keychain(name, password)
    delete_temp_keychain(name)
    create_temp_keychain(name, password)
end

platform :ios do
    desc "iOS Lanes"

        lane :distribute_ios_app do
            add_test_devices
            install_certificate_and_profile
            build_app(workspace: "CCC.xcworkspace", scheme: "CCC")
            firebase_app_distribution(
                app: ENV["IOS_GOOGLE_FIREBASE_APP_ID"],
                groups: "QA",
                release_notes: changelog_from_git_commits(commits_count: 1),
                firebase_cli_token: ENV["FIREBASE_CLI_TOKEN"],
                ipa_path: "../ios/CCC.ipa"
            )
        end

        lane :install_certificate_and_profile do
            api_key = app_store_connect_api_key(
                key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
                issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
                key_content: ENV["APP_STORE_CONNECT_KEY_CONTENT"],
                in_house: false,
            )

            keychain_name = "mustafa.ozhan"
            keychain_password = ENV["SECRET_PASSWORD"]
            ensure_temp_keychain(keychain_name, keychain_password)

            match(
                type: 'appstore',
                git_basic_authorization: Base64.strict_encode64(ENV["GIT_AUTHORIZATION"]),
                keychain_name: keychain_name,
                keychain_password: keychain_password,
                api_key: api_key
            )
        end

        lane :add_test_devices do
            register_devices(
              devices: {
                'Mustafaâ€™s iPhone SE' => '00008030-001924D622F9402E',
              }
            )
        end
end