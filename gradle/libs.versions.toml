[versions]

kotlin = "1.8.0"
ksp = "1.8.0-1.0.9"
detekt = "1.22.0"
androidGradlePlugin = "7.4.1"
composeCompiler = "1.4.0"
compose = "1.3.3"
glance = "1.0.0-alpha05"
material3 = "1.0.1"
androidMaterial = "1.8.0"
composeActivity = "1.6.1"
constraintLayout = "2.1.4"
koinCore = "3.3.2"
koinCompose = "3.4.1"
koinAndroid = "3.3.2"
koinKtor = "3.3.0"
ktor = "2.2.3"
multiplatformSettings = "1.0.0"
firebaseAnalytics = "21.2.0"
firebaseRemoteConfig = "21.2.1"
gsm = "4.3.15"
firebasePer = "20.3.1"
firebasePerPlugin = "1.4.2"
crashlytics = "2.9.2"
admob = "21.4.0"
navigation = "2.5.3"
playCore = "1.10.3"
kotlinXDateTime = "0.4.0"
coroutines = "1.6.4"
billing = "5.1.0"
leakCanary = "2.10"
sqlDelight = "1.5.5"
lifecycle = "2.5.1"
mokoResources = "0.20.1"
buildKonfig = "0.13.3"
splashScreen = "1.0.0"
kover = "0.6.1"
rootBeer = "0.1.0"
mockative = "1.3.1"
firebaseCrashlytics = "18.3.3"
anrWatchDog = "1.4.0"
kermit = "1.2.2"

[libraries]
# COMMON
common-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
common-testAnnotations = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
common-koinCore = { module = "io.insert-koin:koin-core", version.ref = "koinCore" }
common-multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
common-kotlinXDateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinXDateTime" }
common-ktorLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
common-ktorJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
common-ktorClientContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
common-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
common-coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
common-sqlDelightCoroutinesExt = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
common-mokoResources = { module = "dev.icerock.moko:resources", version.ref = "mokoResources" }
common-mockative = { module = "io.mockative:mockative", version.ref = "mockative" }
common-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
common-kermitCrashlytics = { module = "co.touchlab:kermit-crashlytics", version.ref = "kermit" }
common-detektFormatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

# ANDROID
android-androidMaterial = { module = "com.google.android.material:material", version.ref = "androidMaterial" }
android-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }
android-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
android-composeCompiler = { module = "androidx.compose.compiler:compiler", version.ref = "composeCompiler" }
android-composeToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
android-composeTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
android-composeActivity = { module = "androidx.activity:activity-compose", version.ref = "composeActivity" }
android-composeNavigation = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
android-glance = { module = "androidx.glance:glance-appwidget", version.ref = "glance" }
android-navigation = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
android-koinCompose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinCompose" }
android-koinAndroid = { module = "io.insert-koin:koin-android", version.ref = "koinAndroid" }
android-firebaseAnalytics = { module = "com.google.firebase:firebase-analytics-ktx", version.ref = "firebaseAnalytics" }
android-firebaseRemoteConfig = { module = "com.google.firebase:firebase-config-ktx", version.ref = "firebaseRemoteConfig" }
android-firebasePer = { module = "com.google.firebase:firebase-perf-ktx", version.ref = "firebasePer" }
android-lifecycleViewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
android-lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
android-ktor = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
android-sqlliteDriver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqlDelight" }
android-leakCanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }
android-splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splashScreen" }
android-rootBeer = { module = "com.scottyab:rootbeer-lib", version.ref = "rootBeer" }
android-firebaseCrashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx", version.ref = "firebaseCrashlytics" }
android-anrWatchDog = { module = "com.github.anrwatchdog:anrwatchdog", version.ref = "anrWatchDog" }

# ANDROID GOOGLE
android-google-billing = { module = "com.android.billingclient:billing", version.ref = "billing" }
android-google-admob = { module = "com.google.android.gms:play-services-ads", version.ref = "admob" }
android-google-playCore = { module = "com.google.android.play:core", version.ref = "playCore" }

# IOS
ios-ktor = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ios-sqlliteDriver = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqlDelight" }

# JVM
jvm-ktor = { module = "io.ktor:ktor-client-apache", version.ref = "ktor" }
jvm-ktorCore = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
jvm-ktorNetty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
jvm-koinKtor = { module = "io.insert-koin:koin-ktor", version.ref = "koinKtor" }
common-ktorServerContentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
jvm-sqlliteDriver = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
jvm-testJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

# PROCESSORS
processors-mockative = { module = "io.mockative:mockative-processor", version.ref = "mockative" }

# CLASSPATHS
classpaths-androidGradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
classpaths-kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
classpaths-kotlinSerialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
classpaths-sqlDelight = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "sqlDelight" }
classpaths-gsm = { module = "com.google.gms:google-services", version.ref = "gsm" }
classpaths-firebasePerPlugin = { module = "com.google.firebase:perf-plugin", version.ref = "firebasePerPlugin" }
classpaths-crashlytics = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "crashlytics" }
classpaths-navigation = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navigation" }
classpaths-mokoResources = { module = "dev.icerock.moko:resources-generator", version.ref = "mokoResources" }
classpaths-buildKonfig = { module = "com.codingfeline.buildkonfig:buildkonfig-gradle-plugin", version.ref = "buildKonfig" }
classpaths-kover = { module = "org.jetbrains.kotlinx:kover", version.ref = "kover" }

[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform" }
android = { id = "org.jetbrains.kotlin.android" }
jvm = { id = "org.jetbrains.kotlin.jvm" }
cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods" }
androidApp = { id = "com.android.application" }
androidLib = { id = "com.android.library" }
safeArgs = { id = "androidx.navigation.safeargs" }
buildKonfig = { id = "com.codingfeline.buildkonfig" }
crashlytics = { id = "com.google.firebase.crashlytics" }
googleServices = { id = "com.google.gms.google-services" }
firebasePerPlugin = { id = "com.google.firebase.firebase-perf" }
kotlinXSerialization = { id = "kotlinx-serialization" }
sqlDelight = { id = "com.squareup.sqldelight" }
mokoResources = { id = "dev.icerock.mobile.multiplatform-resources" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
