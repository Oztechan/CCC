name: Dependency Check

on:
  schedule:
    - cron: "0 7 * * 5"

jobs:

  DependencyCheck:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.status.outputs.status }}
    steps:

      - name: Clone Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Run dependency updates task
        run: ./gradlew dependencyUpdates -DoutputFormatter=plain

      - name: Extract dependencies from report file
        id: deps
        run: |
          export DEPENDENCIES="$(sed -n '/.*milestone versions:/,/^$/p' build/dependencyUpdates/dependencies_report.txt)"
          DEPENDENCIES="${DEPENDENCIES//$'\n'/'%0A'}"
          DEPENDENCIES="${DEPENDENCIES//$'\r'/'%0D'}"
          echo "OUTPUT:"
          echo $DEPENDENCIES
          echo "depss=$DEPENDENCIES" >> $GITHUB_ENV
          echo "::set-output name=dependencies::$(echo "$DEPENDENCIES")"
          shell: bash

      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
            	"attachments": [
            		{
            			"color": "#3DDC84",
            			"blocks": [
            				{
            					"type": "header",
            					"text": {
            						"type": "plain_text",
            						"text": "Dependency check",
            					}
            				},
            				{
            					"type": "divider"
            				},
            				{
            					"type": "section",
            					"text": {
            						"type": "mrkdwn",
            						"text": '${{ env.depss }}'.split('%0A').join('\n').split('%0D').join('\r')
            					}
            				}
            			]
            		}
            	]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        if: always()

      - name: Set Job Status
        id: status
        run: echo "::set-output name=status::success"

  Notify:
    runs-on: ubuntu-latest
    needs: DependencyCheck
    if: always()
    steps:

      - name: Notify slack fail
        if: false == (needs.DependencyCheck.outputs.status == 'success')
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: ccc
          status: FAILED
          color: danger
