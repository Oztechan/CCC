name: CCC CI

on:
  push:
    branches:
      - develop
  pull_request:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  ANDROID_RELEASE_ADMOB_APP_ID: ${{ secrets.ANDROID_RELEASE_ADMOB_APP_ID }}
  ANDROID_RELEASE_BANNER_AD_UNIT_ID_CALCULATOR: ${{ secrets.ANDROID_RELEASE_BANNER_AD_UNIT_ID_CALCULATOR }}
  ANDROID_RELEASE_BANNER_AD_UNIT_ID_SETTINGS: ${{ secrets.ANDROID_RELEASE_BANNER_AD_UNIT_ID_SETTINGS }}
  ANDROID_RELEASE_BANNER_AD_UNIT_ID_CURRENCIES: ${{ secrets.ANDROID_RELEASE_BANNER_AD_UNIT_ID_CURRENCIES }}
  ANDROID_RELEASE_INTERSTITIAL_AD_ID: ${{ secrets.ANDROID_RELEASE_INTERSTITIAL_AD_ID }}
  ANDROID_RELEASE_REWARDED_AD_UNIT_ID: ${{ secrets.ANDROID_RELEASE_REWARDED_AD_UNIT_ID }}
  ANDROID_DEBUG_ADMOB_APP_ID: ${{ secrets.ANDROID_DEBUG_ADMOB_APP_ID }}
  ANDROID_DEBUG_BANNER_AD_UNIT_ID_CALCULATOR: ${{ secrets.ANDROID_DEBUG_BANNER_AD_UNIT_ID_CALCULATOR }}
  ANDROID_DEBUG_BANNER_AD_UNIT_ID_SETTINGS: ${{ secrets.ANDROID_DEBUG_BANNER_AD_UNIT_ID_SETTINGS }}
  ANDROID_DEBUG_BANNER_AD_UNIT_ID_CURRENCIES: ${{ secrets.ANDROID_DEBUG_BANNER_AD_UNIT_ID_CURRENCIES }}
  ANDROID_DEBUG_INTERSTITIAL_AD_ID: ${{ secrets.ANDROID_DEBUG_INTERSTITIAL_AD_ID }}
  ANDROID_DEBUG_REWARDED_AD_UNIT_ID: ${{ secrets.ANDROID_DEBUG_REWARDED_AD_UNIT_ID }}
  ANDROID_KEY_STORE_PATH: ${{ secrets.ANDROID_KEY_STORE_PATH }}
  ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
  ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
  ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
  BASE_URL_BACKEND: ${{ secrets.BASE_URL_BACKEND }}
  BASE_URL_API: ${{ secrets.BASE_URL_API }}
  BASE_URL_API_PREMIUM: ${{ secrets.BASE_URL_API_PREMIUM }}
  API_KEY_PREMIUM: ${{ secrets.API_KEY_PREMIUM }}
  CI: true

jobs:

  GradleBuild:
    runs-on: macos-12
    outputs:
      status: ${{ steps.status.outputs.status }}
    steps:

      - name: Clone Repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Add Android secret files
        uses: ./.github/actions/android_secrets.xml
        env:
          SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
          ANDROID_GPG_RELEASE_KEYSTORE: ${{ secrets.ANDROID_GPG_RELEASE_KEYSTORE }}
          RELEASE_GOOGLE_SERVICES_JSON_ASC: ${{ secrets.RELEASE_GOOGLE_SERVICES_JSON_ASC }}
          DEBUG_GOOGLE_SERVICES_JSON_ASC: ${{ secrets.DEBUG_GOOGLE_SERVICES_JSON_ASC }}
          AG_CONNECT_SERVICES_JSON_ASC: ${{ secrets.AG_CONNECT_SERVICES_JSON_ASC }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Gradle Build
        run: ./gradlew build koverMergedXmlReport --parallel

      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/kover/merged/xml/report.xml

      - name: Upload to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: build/reports/kover/merged/xml/report.xml

      - name: Set Job Status
        id: status
        run: echo "::set-output name=status::success"

  XCodeBuild:
    runs-on: macos-12
    outputs:
      status: ${{ steps.status.outputs.status }}
    steps:

      - name: Clone Repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Add Android secret files
        uses: ./.github/actions/android_secrets.xml
        env:
          SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
          ANDROID_GPG_RELEASE_KEYSTORE: ${{ secrets.ANDROID_GPG_RELEASE_KEYSTORE }}
          RELEASE_GOOGLE_SERVICES_JSON_ASC: ${{ secrets.RELEASE_GOOGLE_SERVICES_JSON_ASC }}
          DEBUG_GOOGLE_SERVICES_JSON_ASC: ${{ secrets.DEBUG_GOOGLE_SERVICES_JSON_ASC }}
          AG_CONNECT_SERVICES_JSON_ASC: ${{ secrets.AG_CONNECT_SERVICES_JSON_ASC }}

      - name: Adding secret files
        run: |
          echo "${{ secrets.IOS_GPG_FIREBASE_CONFIG }}" > GoogleService-Info.plist.asc
          mkdir ios/CCC/Resources/Release
          gpg -d --passphrase "${{ secrets.SECRET_PASSWORD }}" --batch GoogleService-Info.plist.asc > ios/CCC/Resources/Release/GoogleService-Info.plist
          rm ios/CCC/Resources/Debug/GoogleService-Info.plist
          echo "${{ secrets.IOS_GPG_RELEASE_XCCONFIG }}" > Release.xcconfig.asc
          gpg -d --passphrase "${{ secrets.SECRET_PASSWORD }}" --batch Release.xcconfig.asc > ios/CCC/Resources/Release/Config.xcconfig

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Install Cocoapods
        run: |
          ./gradlew provider:podGenIOS res:podGenIOS --parallel
          cd ios/CCC
          pod install --repo-update

      - name: Build
        uses: maierj/fastlane-action@v2.3.0
        with:
          lane: 'build'
          subdirectory: 'ios'
        env:
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_KEY_CONTENT }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          IOS_GOOGLE_FIREBASE_APP_ID: ${{ secrets.IOS_GOOGLE_FIREBASE_APP_ID }}
          FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}
          GIT_AUTHORIZATION: ${{ secrets.GIT_AUTHORIZATION }}
          SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
          FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 5
          FASTLANE_XCODEBUILD_SETTINGS_RETRIES: 5

      - name: Set Job Status
        id: status
        run: echo "::set-output name=status::success"

  Notify:
    runs-on: ubuntu-latest
    needs: [ GradleBuild, XCodeBuild ]
    if: always()
    steps:

      - name: Notify slack fail
        if: false == (needs.GradleBuild.outputs.status == 'success') || false == (needs.XCodeBuild.outputs.status == 'success')
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v2
        with:
          channel: ccc-github
          status: FAILED
          color: danger
