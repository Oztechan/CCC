name: Dependency

on:
  schedule:
    - cron: "0 7 * * 6"
  push:
    branches:
      - develop
  pull_request:

jobs:

  DependencyCheck:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.status.outputs.status }}
    steps:

      - name: Clone Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Adding secret files
        run: |
          mkdir android/src/release
          echo "${{ secrets.RELEASE_GOOGLE_SERVICES_JSON_ASC }}" > google-services.json.asc
          gpg -d --passphrase "${{ secrets.SECRET_PASSWORD }}" --batch google-services.json.asc > android/src/release/google-services.json
          mkdir android/src/debug
          echo "${{ secrets.DEBUG_GOOGLE_SERVICES_JSON_ASC }}" > google-services.json.asc
          gpg -d --passphrase "${{ secrets.SECRET_PASSWORD }}" --batch google-services.json.asc > android/src/debug/google-services.json

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Run dependencyUpdates and buildHealth tasks
        run: ./gradlew dependencyUpdates buildHealth --parallel

      - name: Upload Dependency Updates report
        uses: actions/upload-artifact@v2
        with:
          name: dependency-updates.txt
          path: build/dependencyUpdates/report.txt

      - name: Upload Build Healt Report
        uses: actions/upload-artifact@v2
        with:
          name: build-health.txt
          path: build/reports/dependency-analysis/build-health-report.txt

      - name: Set Job Status
        id: status
        run: echo "::set-output name=status::success"

  Notify:
    runs-on: ubuntu-latest
    needs: DependencyCheck
    if: always()
    steps:

      - name: Notify slack success
        if: needs.DependencyCheck.outputs.status == 'success'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: ccc
          status: SUCCESS
          color: good

      - name: Notify slack fail
        if: false == (needs.DependencyCheck.outputs.status == 'success')
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: ccc
          status: FAILED
          color: danger
